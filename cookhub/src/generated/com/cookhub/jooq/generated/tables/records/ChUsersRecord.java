/*
 * This file is generated by jOOQ.
 */
package com.cookhub.jooq.generated.tables.records;


import com.cookhub.jooq.generated.tables.ChUsers;

import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;

import java.time.LocalDateTime;

import javax.annotation.processing.Generated;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.19.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ChUsersRecord extends UpdatableRecordImpl<ChUsersRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>jominjong.CH_USERS.USER_NO</code>.
     */
    public ChUsersRecord setUserNo(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>jominjong.CH_USERS.USER_NO</code>.
     */
    public Integer getUserNo() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>jominjong.CH_USERS.USER_EMAIL</code>.
     */
    public ChUsersRecord setUserEmail(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>jominjong.CH_USERS.USER_EMAIL</code>.
     */
    @NotNull
    @Size(max = 256)
    public String getUserEmail() {
        return (String) get(1);
    }

    /**
     * Setter for <code>jominjong.CH_USERS.USER_PW</code>.
     */
    public ChUsersRecord setUserPw(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>jominjong.CH_USERS.USER_PW</code>.
     */
    @NotNull
    @Size(max = 256)
    public String getUserPw() {
        return (String) get(2);
    }

    /**
     * Setter for <code>jominjong.CH_USERS.USER_NAME</code>.
     */
    public ChUsersRecord setUserName(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>jominjong.CH_USERS.USER_NAME</code>.
     */
    @NotNull
    @Size(max = 32)
    public String getUserName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>jominjong.CH_USERS.DELETED_AT</code>.
     */
    public ChUsersRecord setDeletedAt(LocalDateTime value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>jominjong.CH_USERS.DELETED_AT</code>.
     */
    public LocalDateTime getDeletedAt() {
        return (LocalDateTime) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ChUsersRecord
     */
    public ChUsersRecord() {
        super(ChUsers.CH_USERS);
    }

    /**
     * Create a detached, initialised ChUsersRecord
     */
    public ChUsersRecord(Integer userNo, String userEmail, String userPw, String userName, LocalDateTime deletedAt) {
        super(ChUsers.CH_USERS);

        setUserNo(userNo);
        setUserEmail(userEmail);
        setUserPw(userPw);
        setUserName(userName);
        setDeletedAt(deletedAt);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised ChUsersRecord
     */
    public ChUsersRecord(com.cookhub.jooq.generated.tables.pojos.ChUsers value) {
        super(ChUsers.CH_USERS);

        if (value != null) {
            setUserNo(value.getUserNo());
            setUserEmail(value.getUserEmail());
            setUserPw(value.getUserPw());
            setUserName(value.getUserName());
            setDeletedAt(value.getDeletedAt());
            resetChangedOnNotNull();
        }
    }
}
