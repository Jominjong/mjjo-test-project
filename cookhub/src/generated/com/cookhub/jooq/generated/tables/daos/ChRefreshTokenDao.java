/*
 * This file is generated by jOOQ.
 */
package com.cookhub.jooq.generated.tables.daos;


import com.cookhub.jooq.generated.tables.ChRefreshToken;
import com.cookhub.jooq.generated.tables.records.ChRefreshTokenRecord;

import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;

import javax.annotation.processing.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.19.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class ChRefreshTokenDao extends DAOImpl<ChRefreshTokenRecord, com.cookhub.jooq.generated.tables.pojos.ChRefreshToken, Long> {

    /**
     * Create a new ChRefreshTokenDao without any configuration
     */
    public ChRefreshTokenDao() {
        super(ChRefreshToken.CH_REFRESH_TOKEN, com.cookhub.jooq.generated.tables.pojos.ChRefreshToken.class);
    }

    /**
     * Create a new ChRefreshTokenDao with an attached configuration
     */
    @Autowired
    public ChRefreshTokenDao(Configuration configuration) {
        super(ChRefreshToken.CH_REFRESH_TOKEN, com.cookhub.jooq.generated.tables.pojos.ChRefreshToken.class, configuration);
    }

    @Override
    public Long getId(com.cookhub.jooq.generated.tables.pojos.ChRefreshToken object) {
        return object.getRtId();
    }

    /**
     * Fetch records that have <code>RT_ID BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.cookhub.jooq.generated.tables.pojos.ChRefreshToken> fetchRangeOfRtId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(ChRefreshToken.CH_REFRESH_TOKEN.RT_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>RT_ID IN (values)</code>
     */
    public List<com.cookhub.jooq.generated.tables.pojos.ChRefreshToken> fetchByRtId(Long... values) {
        return fetch(ChRefreshToken.CH_REFRESH_TOKEN.RT_ID, values);
    }

    /**
     * Fetch a unique record that has <code>RT_ID = value</code>
     */
    public com.cookhub.jooq.generated.tables.pojos.ChRefreshToken fetchOneByRtId(Long value) {
        return fetchOne(ChRefreshToken.CH_REFRESH_TOKEN.RT_ID, value);
    }

    /**
     * Fetch a unique record that has <code>RT_ID = value</code>
     */
    public Optional<com.cookhub.jooq.generated.tables.pojos.ChRefreshToken> fetchOptionalByRtId(Long value) {
        return fetchOptional(ChRefreshToken.CH_REFRESH_TOKEN.RT_ID, value);
    }

    /**
     * Fetch records that have <code>USER_NO BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.cookhub.jooq.generated.tables.pojos.ChRefreshToken> fetchRangeOfUserNo(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(ChRefreshToken.CH_REFRESH_TOKEN.USER_NO, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>USER_NO IN (values)</code>
     */
    public List<com.cookhub.jooq.generated.tables.pojos.ChRefreshToken> fetchByUserNo(Integer... values) {
        return fetch(ChRefreshToken.CH_REFRESH_TOKEN.USER_NO, values);
    }

    /**
     * Fetch records that have <code>REFRESH_TOKEN BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.cookhub.jooq.generated.tables.pojos.ChRefreshToken> fetchRangeOfRefreshToken(String lowerInclusive, String upperInclusive) {
        return fetchRange(ChRefreshToken.CH_REFRESH_TOKEN.REFRESH_TOKEN, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>REFRESH_TOKEN IN (values)</code>
     */
    public List<com.cookhub.jooq.generated.tables.pojos.ChRefreshToken> fetchByRefreshToken(String... values) {
        return fetch(ChRefreshToken.CH_REFRESH_TOKEN.REFRESH_TOKEN, values);
    }

    /**
     * Fetch records that have <code>ISSUED_AT BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.cookhub.jooq.generated.tables.pojos.ChRefreshToken> fetchRangeOfIssuedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(ChRefreshToken.CH_REFRESH_TOKEN.ISSUED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>ISSUED_AT IN (values)</code>
     */
    public List<com.cookhub.jooq.generated.tables.pojos.ChRefreshToken> fetchByIssuedAt(LocalDateTime... values) {
        return fetch(ChRefreshToken.CH_REFRESH_TOKEN.ISSUED_AT, values);
    }

    /**
     * Fetch records that have <code>EXPIRED_AT BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.cookhub.jooq.generated.tables.pojos.ChRefreshToken> fetchRangeOfExpiredAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(ChRefreshToken.CH_REFRESH_TOKEN.EXPIRED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>EXPIRED_AT IN (values)</code>
     */
    public List<com.cookhub.jooq.generated.tables.pojos.ChRefreshToken> fetchByExpiredAt(LocalDateTime... values) {
        return fetch(ChRefreshToken.CH_REFRESH_TOKEN.EXPIRED_AT, values);
    }
}
