/*
 * This file is generated by jOOQ.
 */
package com.cookhub.jooq.generated.tables.pojos;


import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;

import java.io.Serializable;

import javax.annotation.processing.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.19.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ChIngredients implements Serializable {

    private static final long serialVersionUID = 1L;

    private final Integer ingNo;
    private final Integer boardNo;
    private final String ingName;
    private final String ingAmount;

    public ChIngredients(ChIngredients value) {
        this.ingNo = value.ingNo;
        this.boardNo = value.boardNo;
        this.ingName = value.ingName;
        this.ingAmount = value.ingAmount;
    }

    public ChIngredients(
        Integer ingNo,
        Integer boardNo,
        String ingName,
        String ingAmount
    ) {
        this.ingNo = ingNo;
        this.boardNo = boardNo;
        this.ingName = ingName;
        this.ingAmount = ingAmount;
    }

    /**
     * Getter for <code>jominjong.CH_INGREDIENTS.ING_NO</code>.
     */
    public Integer getIngNo() {
        return this.ingNo;
    }

    /**
     * Getter for <code>jominjong.CH_INGREDIENTS.BOARD_NO</code>.
     */
    @NotNull
    public Integer getBoardNo() {
        return this.boardNo;
    }

    /**
     * Getter for <code>jominjong.CH_INGREDIENTS.ING_NAME</code>.
     */
    @NotNull
    @Size(max = 128)
    public String getIngName() {
        return this.ingName;
    }

    /**
     * Getter for <code>jominjong.CH_INGREDIENTS.ING_AMOUNT</code>.
     */
    @NotNull
    @Size(max = 128)
    public String getIngAmount() {
        return this.ingAmount;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final ChIngredients other = (ChIngredients) obj;
        if (this.ingNo == null) {
            if (other.ingNo != null)
                return false;
        }
        else if (!this.ingNo.equals(other.ingNo))
            return false;
        if (this.boardNo == null) {
            if (other.boardNo != null)
                return false;
        }
        else if (!this.boardNo.equals(other.boardNo))
            return false;
        if (this.ingName == null) {
            if (other.ingName != null)
                return false;
        }
        else if (!this.ingName.equals(other.ingName))
            return false;
        if (this.ingAmount == null) {
            if (other.ingAmount != null)
                return false;
        }
        else if (!this.ingAmount.equals(other.ingAmount))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.ingNo == null) ? 0 : this.ingNo.hashCode());
        result = prime * result + ((this.boardNo == null) ? 0 : this.boardNo.hashCode());
        result = prime * result + ((this.ingName == null) ? 0 : this.ingName.hashCode());
        result = prime * result + ((this.ingAmount == null) ? 0 : this.ingAmount.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("ChIngredients (");

        sb.append(ingNo);
        sb.append(", ").append(boardNo);
        sb.append(", ").append(ingName);
        sb.append(", ").append(ingAmount);

        sb.append(")");
        return sb.toString();
    }
}
