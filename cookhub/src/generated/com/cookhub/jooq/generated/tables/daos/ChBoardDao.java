/*
 * This file is generated by jOOQ.
 */
package com.cookhub.jooq.generated.tables.daos;


import com.cookhub.jooq.generated.tables.ChBoard;
import com.cookhub.jooq.generated.tables.records.ChBoardRecord;

import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;

import javax.annotation.processing.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.19.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class ChBoardDao extends DAOImpl<ChBoardRecord, com.cookhub.jooq.generated.tables.pojos.ChBoard, Integer> {

    /**
     * Create a new ChBoardDao without any configuration
     */
    public ChBoardDao() {
        super(ChBoard.CH_BOARD, com.cookhub.jooq.generated.tables.pojos.ChBoard.class);
    }

    /**
     * Create a new ChBoardDao with an attached configuration
     */
    @Autowired
    public ChBoardDao(Configuration configuration) {
        super(ChBoard.CH_BOARD, com.cookhub.jooq.generated.tables.pojos.ChBoard.class, configuration);
    }

    @Override
    public Integer getId(com.cookhub.jooq.generated.tables.pojos.ChBoard object) {
        return object.getBoardNo();
    }

    /**
     * Fetch records that have <code>BOARD_NO BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.cookhub.jooq.generated.tables.pojos.ChBoard> fetchRangeOfBoardNo(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(ChBoard.CH_BOARD.BOARD_NO, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>BOARD_NO IN (values)</code>
     */
    public List<com.cookhub.jooq.generated.tables.pojos.ChBoard> fetchByBoardNo(Integer... values) {
        return fetch(ChBoard.CH_BOARD.BOARD_NO, values);
    }

    /**
     * Fetch a unique record that has <code>BOARD_NO = value</code>
     */
    public com.cookhub.jooq.generated.tables.pojos.ChBoard fetchOneByBoardNo(Integer value) {
        return fetchOne(ChBoard.CH_BOARD.BOARD_NO, value);
    }

    /**
     * Fetch a unique record that has <code>BOARD_NO = value</code>
     */
    public Optional<com.cookhub.jooq.generated.tables.pojos.ChBoard> fetchOptionalByBoardNo(Integer value) {
        return fetchOptional(ChBoard.CH_BOARD.BOARD_NO, value);
    }

    /**
     * Fetch records that have <code>USER_NO BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.cookhub.jooq.generated.tables.pojos.ChBoard> fetchRangeOfUserNo(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(ChBoard.CH_BOARD.USER_NO, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>USER_NO IN (values)</code>
     */
    public List<com.cookhub.jooq.generated.tables.pojos.ChBoard> fetchByUserNo(Integer... values) {
        return fetch(ChBoard.CH_BOARD.USER_NO, values);
    }

    /**
     * Fetch records that have <code>BOARD_TITLE BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.cookhub.jooq.generated.tables.pojos.ChBoard> fetchRangeOfBoardTitle(String lowerInclusive, String upperInclusive) {
        return fetchRange(ChBoard.CH_BOARD.BOARD_TITLE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>BOARD_TITLE IN (values)</code>
     */
    public List<com.cookhub.jooq.generated.tables.pojos.ChBoard> fetchByBoardTitle(String... values) {
        return fetch(ChBoard.CH_BOARD.BOARD_TITLE, values);
    }

    /**
     * Fetch records that have <code>BOARD_CON BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.cookhub.jooq.generated.tables.pojos.ChBoard> fetchRangeOfBoardCon(String lowerInclusive, String upperInclusive) {
        return fetchRange(ChBoard.CH_BOARD.BOARD_CON, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>BOARD_CON IN (values)</code>
     */
    public List<com.cookhub.jooq.generated.tables.pojos.ChBoard> fetchByBoardCon(String... values) {
        return fetch(ChBoard.CH_BOARD.BOARD_CON, values);
    }

    /**
     * Fetch records that have <code>CREATED_AT BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.cookhub.jooq.generated.tables.pojos.ChBoard> fetchRangeOfCreatedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(ChBoard.CH_BOARD.CREATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>CREATED_AT IN (values)</code>
     */
    public List<com.cookhub.jooq.generated.tables.pojos.ChBoard> fetchByCreatedAt(LocalDateTime... values) {
        return fetch(ChBoard.CH_BOARD.CREATED_AT, values);
    }

    /**
     * Fetch records that have <code>UPDATED_AT BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.cookhub.jooq.generated.tables.pojos.ChBoard> fetchRangeOfUpdatedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(ChBoard.CH_BOARD.UPDATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>UPDATED_AT IN (values)</code>
     */
    public List<com.cookhub.jooq.generated.tables.pojos.ChBoard> fetchByUpdatedAt(LocalDateTime... values) {
        return fetch(ChBoard.CH_BOARD.UPDATED_AT, values);
    }

    /**
     * Fetch records that have <code>CG_NO BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.cookhub.jooq.generated.tables.pojos.ChBoard> fetchRangeOfCgNo(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(ChBoard.CH_BOARD.CG_NO, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>CG_NO IN (values)</code>
     */
    public List<com.cookhub.jooq.generated.tables.pojos.ChBoard> fetchByCgNo(Integer... values) {
        return fetch(ChBoard.CH_BOARD.CG_NO, values);
    }
}
