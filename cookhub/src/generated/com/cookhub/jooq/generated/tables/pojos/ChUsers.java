/*
 * This file is generated by jOOQ.
 */
package com.cookhub.jooq.generated.tables.pojos;


import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;

import java.io.Serializable;
import java.time.LocalDateTime;

import javax.annotation.processing.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.19.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ChUsers implements Serializable {

    private static final long serialVersionUID = 1L;

    private final Integer userNo;
    private final String userEmail;
    private final String userPw;
    private final String userName;
    private final LocalDateTime deletedAt;

    public ChUsers(ChUsers value) {
        this.userNo = value.userNo;
        this.userEmail = value.userEmail;
        this.userPw = value.userPw;
        this.userName = value.userName;
        this.deletedAt = value.deletedAt;
    }

    public ChUsers(
        Integer userNo,
        String userEmail,
        String userPw,
        String userName,
        LocalDateTime deletedAt
    ) {
        this.userNo = userNo;
        this.userEmail = userEmail;
        this.userPw = userPw;
        this.userName = userName;
        this.deletedAt = deletedAt;
    }

    /**
     * Getter for <code>jominjong.CH_USERS.USER_NO</code>.
     */
    public Integer getUserNo() {
        return this.userNo;
    }

    /**
     * Getter for <code>jominjong.CH_USERS.USER_EMAIL</code>.
     */
    @NotNull
    @Size(max = 256)
    public String getUserEmail() {
        return this.userEmail;
    }

    /**
     * Getter for <code>jominjong.CH_USERS.USER_PW</code>.
     */
    @NotNull
    @Size(max = 256)
    public String getUserPw() {
        return this.userPw;
    }

    /**
     * Getter for <code>jominjong.CH_USERS.USER_NAME</code>.
     */
    @NotNull
    @Size(max = 32)
    public String getUserName() {
        return this.userName;
    }

    /**
     * Getter for <code>jominjong.CH_USERS.DELETED_AT</code>.
     */
    public LocalDateTime getDeletedAt() {
        return this.deletedAt;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final ChUsers other = (ChUsers) obj;
        if (this.userNo == null) {
            if (other.userNo != null)
                return false;
        }
        else if (!this.userNo.equals(other.userNo))
            return false;
        if (this.userEmail == null) {
            if (other.userEmail != null)
                return false;
        }
        else if (!this.userEmail.equals(other.userEmail))
            return false;
        if (this.userPw == null) {
            if (other.userPw != null)
                return false;
        }
        else if (!this.userPw.equals(other.userPw))
            return false;
        if (this.userName == null) {
            if (other.userName != null)
                return false;
        }
        else if (!this.userName.equals(other.userName))
            return false;
        if (this.deletedAt == null) {
            if (other.deletedAt != null)
                return false;
        }
        else if (!this.deletedAt.equals(other.deletedAt))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.userNo == null) ? 0 : this.userNo.hashCode());
        result = prime * result + ((this.userEmail == null) ? 0 : this.userEmail.hashCode());
        result = prime * result + ((this.userPw == null) ? 0 : this.userPw.hashCode());
        result = prime * result + ((this.userName == null) ? 0 : this.userName.hashCode());
        result = prime * result + ((this.deletedAt == null) ? 0 : this.deletedAt.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("ChUsers (");

        sb.append(userNo);
        sb.append(", ").append(userEmail);
        sb.append(", ").append(userPw);
        sb.append(", ").append(userName);
        sb.append(", ").append(deletedAt);

        sb.append(")");
        return sb.toString();
    }
}
