/*
 * This file is generated by jOOQ.
 */
package com.cookhub.jooq.generated;


import com.cookhub.jooq.generated.tables.ChBoard;
import com.cookhub.jooq.generated.tables.ChCategories;
import com.cookhub.jooq.generated.tables.ChIngredients;
import com.cookhub.jooq.generated.tables.ChRefreshToken;
import com.cookhub.jooq.generated.tables.ChUsers;
import com.cookhub.jooq.generated.tables.records.ChBoardRecord;
import com.cookhub.jooq.generated.tables.records.ChCategoriesRecord;
import com.cookhub.jooq.generated.tables.records.ChIngredientsRecord;
import com.cookhub.jooq.generated.tables.records.ChRefreshTokenRecord;
import com.cookhub.jooq.generated.tables.records.ChUsersRecord;

import javax.annotation.processing.Generated;

import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * jominjong.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.19.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<ChBoardRecord> KEY_CH_BOARD_PRIMARY = Internal.createUniqueKey(ChBoard.CH_BOARD, DSL.name("KEY_CH_BOARD_PRIMARY"), new TableField[] { ChBoard.CH_BOARD.BOARD_NO }, true);
    public static final UniqueKey<ChCategoriesRecord> KEY_CH_CATEGORIES_PRIMARY = Internal.createUniqueKey(ChCategories.CH_CATEGORIES, DSL.name("KEY_CH_CATEGORIES_PRIMARY"), new TableField[] { ChCategories.CH_CATEGORIES.CG_NO }, true);
    public static final UniqueKey<ChIngredientsRecord> KEY_CH_INGREDIENTS_PRIMARY = Internal.createUniqueKey(ChIngredients.CH_INGREDIENTS, DSL.name("KEY_CH_INGREDIENTS_PRIMARY"), new TableField[] { ChIngredients.CH_INGREDIENTS.ING_NO }, true);
    public static final UniqueKey<ChRefreshTokenRecord> KEY_CH_REFRESH_TOKEN_PRIMARY = Internal.createUniqueKey(ChRefreshToken.CH_REFRESH_TOKEN, DSL.name("KEY_CH_REFRESH_TOKEN_PRIMARY"), new TableField[] { ChRefreshToken.CH_REFRESH_TOKEN.RT_ID }, true);
    public static final UniqueKey<ChUsersRecord> KEY_CH_USERS_PRIMARY = Internal.createUniqueKey(ChUsers.CH_USERS, DSL.name("KEY_CH_USERS_PRIMARY"), new TableField[] { ChUsers.CH_USERS.USER_NO }, true);
    public static final UniqueKey<ChUsersRecord> KEY_CH_USERS_USER_EMAIL = Internal.createUniqueKey(ChUsers.CH_USERS, DSL.name("KEY_CH_USERS_USER_EMAIL"), new TableField[] { ChUsers.CH_USERS.USER_EMAIL }, true);
}
