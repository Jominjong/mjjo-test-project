/*
 * This file is generated by jOOQ.
 */
package com.cookhub.jooq.generated.tables.daos;


import com.cookhub.jooq.generated.tables.ChUsers;
import com.cookhub.jooq.generated.tables.records.ChUsersRecord;

import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;

import javax.annotation.processing.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.19.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class ChUsersDao extends DAOImpl<ChUsersRecord, com.cookhub.jooq.generated.tables.pojos.ChUsers, Integer> {

    /**
     * Create a new ChUsersDao without any configuration
     */
    public ChUsersDao() {
        super(ChUsers.CH_USERS, com.cookhub.jooq.generated.tables.pojos.ChUsers.class);
    }

    /**
     * Create a new ChUsersDao with an attached configuration
     */
    @Autowired
    public ChUsersDao(Configuration configuration) {
        super(ChUsers.CH_USERS, com.cookhub.jooq.generated.tables.pojos.ChUsers.class, configuration);
    }

    @Override
    public Integer getId(com.cookhub.jooq.generated.tables.pojos.ChUsers object) {
        return object.getUserNo();
    }

    /**
     * Fetch records that have <code>USER_NO BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.cookhub.jooq.generated.tables.pojos.ChUsers> fetchRangeOfUserNo(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(ChUsers.CH_USERS.USER_NO, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>USER_NO IN (values)</code>
     */
    public List<com.cookhub.jooq.generated.tables.pojos.ChUsers> fetchByUserNo(Integer... values) {
        return fetch(ChUsers.CH_USERS.USER_NO, values);
    }

    /**
     * Fetch a unique record that has <code>USER_NO = value</code>
     */
    public com.cookhub.jooq.generated.tables.pojos.ChUsers fetchOneByUserNo(Integer value) {
        return fetchOne(ChUsers.CH_USERS.USER_NO, value);
    }

    /**
     * Fetch a unique record that has <code>USER_NO = value</code>
     */
    public Optional<com.cookhub.jooq.generated.tables.pojos.ChUsers> fetchOptionalByUserNo(Integer value) {
        return fetchOptional(ChUsers.CH_USERS.USER_NO, value);
    }

    /**
     * Fetch records that have <code>USER_EMAIL BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.cookhub.jooq.generated.tables.pojos.ChUsers> fetchRangeOfUserEmail(String lowerInclusive, String upperInclusive) {
        return fetchRange(ChUsers.CH_USERS.USER_EMAIL, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>USER_EMAIL IN (values)</code>
     */
    public List<com.cookhub.jooq.generated.tables.pojos.ChUsers> fetchByUserEmail(String... values) {
        return fetch(ChUsers.CH_USERS.USER_EMAIL, values);
    }

    /**
     * Fetch a unique record that has <code>USER_EMAIL = value</code>
     */
    public com.cookhub.jooq.generated.tables.pojos.ChUsers fetchOneByUserEmail(String value) {
        return fetchOne(ChUsers.CH_USERS.USER_EMAIL, value);
    }

    /**
     * Fetch a unique record that has <code>USER_EMAIL = value</code>
     */
    public Optional<com.cookhub.jooq.generated.tables.pojos.ChUsers> fetchOptionalByUserEmail(String value) {
        return fetchOptional(ChUsers.CH_USERS.USER_EMAIL, value);
    }

    /**
     * Fetch records that have <code>USER_PW BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.cookhub.jooq.generated.tables.pojos.ChUsers> fetchRangeOfUserPw(String lowerInclusive, String upperInclusive) {
        return fetchRange(ChUsers.CH_USERS.USER_PW, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>USER_PW IN (values)</code>
     */
    public List<com.cookhub.jooq.generated.tables.pojos.ChUsers> fetchByUserPw(String... values) {
        return fetch(ChUsers.CH_USERS.USER_PW, values);
    }

    /**
     * Fetch records that have <code>USER_NAME BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.cookhub.jooq.generated.tables.pojos.ChUsers> fetchRangeOfUserName(String lowerInclusive, String upperInclusive) {
        return fetchRange(ChUsers.CH_USERS.USER_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>USER_NAME IN (values)</code>
     */
    public List<com.cookhub.jooq.generated.tables.pojos.ChUsers> fetchByUserName(String... values) {
        return fetch(ChUsers.CH_USERS.USER_NAME, values);
    }

    /**
     * Fetch records that have <code>DELETED_AT BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.cookhub.jooq.generated.tables.pojos.ChUsers> fetchRangeOfDeletedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(ChUsers.CH_USERS.DELETED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>DELETED_AT IN (values)</code>
     */
    public List<com.cookhub.jooq.generated.tables.pojos.ChUsers> fetchByDeletedAt(LocalDateTime... values) {
        return fetch(ChUsers.CH_USERS.DELETED_AT, values);
    }
}
